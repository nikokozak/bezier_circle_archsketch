{"version":3,"sources":["noise.js","options.js","logic.js","controls.js","bezier_circle.js"],"names":["noise","x","y","z","p","Array","permutation","i","X","Math","floor","Y","Z","u","fade","v","w","A","AA","AB","B","BA","BB","scale","lerp","grad","t","a","b","hash","h","n","centerX","centerY","radius","numVertices","posXFn","sin","posYFn","cos","controlPointXFn","controlPointYFn","contractionSize","cycleSpeed","contractionFunc","time","beforeCycle","bgColor","traceAmt","paused","tweenType","tweenDuration","cache","cacheOptions","options","Object","entries","reduce","accum","key","value","diverges","optionsCache","draw","vertices","context","firstVertex","beginPath","moveTo","x_pos","y_pos","forEach","vertex","index","bezierCurveTo","cp0x","cp0y","cp1x","cp1y","strokeStyle","stroke","calculatePosition","radian","calculateCPPosition","rotationStepFor","PI","makeBezierVertex","xPosition","yPosition","cpXPosition","cpYPosition","cpNextXPosition","cpNextYPosition","cp0x_orig","cp0y_orig","cp0x_next","cp0y_next","cp1x_orig","cp1y_orig","cp1x_next","cp1y_next","makeFirstVertex","updateBezierVertexControlPoints","tweenControlPoints","gsap","fromTo","duration","ease","makeVertices","result","step","cp_tween","pause","refreshVertices","console","log","refresh","internalTimer","progress","controls","Controls","controlIDs","length","acc","id","makeController","element","document","getElementById","controller","callback","fn","type","oninput","addEventListener","contractionSlider","e","target","radiusSlider","verticesSlider","tracesSlider","speedSlider","pauseButton","innerHTML","start","stateCache","ctxt","canvas","getContext","imageSmoothingQuality","translate","drawBackground","loop","transparent","color","fillStyle","fillRect","next","window","requestAnimationFrame"],"mappings":"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","file":"bezier_circle.js","sourceRoot":"../src","sourcesContent":["// Simplex noise implementation, ported by Kas Thomas, \n// adapted by Nikolai Kozak,\n// see: http://asserttrue.blogspot.com/2011/12/perlin-noise-in-javascript_31.html\nexport default function noise (x, y, z) {\n\n    var p = new Array(512);\n\n    var permutation = [ 151,160,137,91,90,15,\n    131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,\n    190, 6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,\n    88,237,149,56,87,174,20,125,136,171,168, 68,175,74,165,71,134,139,48,27,166,\n    77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,\n    102,143,54, 65,25,63,161, 1,216,80,73,209,76,132,187,208, 89,18,169,200,196,\n    135,130,116,188,159,86,164,100,109,198,173,186, 3,64,52,217,226,250,124,123,\n    5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,\n    223,183,170,213,119,248,152, 2,44,154,163, 70,221,153,101,155,167, 43,172,9,\n    129,22,39,253, 19,98,108,110,79,113,224,232,178,185, 112,104,218,246,97,228,\n    251,34,242,193,238,210,144,12,191,179,162,241, 81,51,145,235,249,14,239,107,\n    49,192,214, 31,181,199,106,157,184, 84,204,176,115,121,50,45,127, 4,150,254,\n    138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180\n    ];\n\n    for (var i=0; i < 256 ; i++) \n        p[256+i] = p[i] = permutation[i]; \n\n        var X = Math.floor(x) & 255,                  // FIND UNIT CUBE THAT\n            Y = Math.floor(y) & 255,                  // CONTAINS POINT.\n            Z = Math.floor(z) & 255;\n        x -= Math.floor(x);                                // FIND RELATIVE X,Y,Z\n        y -= Math.floor(y);                                // OF POINT IN CUBE.\n        z -= Math.floor(z);\n        var    u = fade(x),                                // COMPUTE FADE CURVES\n                v = fade(y),                                // FOR EACH OF X,Y,Z.\n                w = fade(z);\n        var A = p[X  ]+Y, AA = p[A]+Z, AB = p[A+1]+Z,      // HASH COORDINATES OF\n            B = p[X+1]+Y, BA = p[B]+Z, BB = p[B+1]+Z;      // THE 8 CUBE CORNERS,\n\n        return scale(lerp(w, lerp(v, lerp(u, grad(p[AA  ], x  , y  , z   ),  // AND ADD\n                                        grad(p[BA  ], x-1, y  , z   )), // BLENDED\n                                lerp(u, grad(p[AB  ], x  , y-1, z   ),  // RESULTS\n                                        grad(p[BB  ], x-1, y-1, z   ))),// FROM  8\n                        lerp(v, lerp(u, grad(p[AA+1], x  , y  , z-1 ),  // CORNERS\n                                        grad(p[BA+1], x-1, y  , z-1 )), // OF CUBE\n                                lerp(u, grad(p[AB+1], x  , y-1, z-1 ),\n                                        grad(p[BB+1], x-1, y-1, z-1 )))));\n}\n\nfunction fade(t) { return t * t * t * (t * (t * 6 - 15) + 10); }\n\nfunction lerp( t, a, b) { return a + t * (b - a); }\n\nfunction grad(hash, x, y, z) {\n    var h = hash & 15;                      // CONVERT LO 4 BITS OF HASH CODE\n    var u = h<8 ? x : y,                 // INTO 12 GRADIENT DIRECTIONS.\n            v = h<4 ? y : h==12||h==14 ? x : z;\n    return ((h&1) == 0 ? u : -u) + ((h&2) == 0 ? v : -v);\n} \n\nfunction scale(n) { return (1 + n)/2; }\n","import noise from './noise.js'\n\n// Application options\nexport default {\n\n    centerX: 200,\n    centerY: 200,\n    radius: 200,\n\n    numVertices: 10,\n\n    posXFn: x => Math.sin(x),\n    posYFn: y => Math.cos(y),\n\n    controlPointXFn: x => Math.sin(x),\n    controlPointYFn: y => Math.cos(y),\n\n    contractionSize: 1,\n\n    cycleSpeed: 60,\n\n    contractionFunc: (i, time) => { return noise(i, i, time) },\n\n    beforeCycle: () => {},\n\n    bgColor: 40,\n    traceAmt: 0.2,\n    paused: false,\n\n    tweenType: 'elastic',\n    tweenDuration: 2,\n\n}\n\nexport const cache = {};\n\nexport function cacheOptions (options) \n{\n    Object.entries(options)\n        .reduce((accum, [key, value]) =>\n        {\n            accum[key] = value;\n            return accum;\n        }, cache);\n\n    return options;\n}\n\nexport function diverges (options, optionsCache)\n{\n    return (options.numVertices != optionsCache.numVertices ||\n        options.radius != optionsCache.radius);\n}\n","import { cacheOptions, diverges } from './options.js'\n\nexport function draw (vertices, context)\n{\n    const firstVertex = vertices[0];\n\n    context.beginPath();\n\n    context.moveTo(firstVertex.x_pos, firstVertex.y_pos);\n\n    vertices.forEach((vertex, index) =>\n        {\n            if (index == 0) return;\n\n            context.bezierCurveTo(\n                vertex.cp0x,\n                vertex.cp0y,\n                vertex.cp1x,\n                vertex.cp1y,\n                vertex.x_pos,\n                vertex.y_pos\n            );\n\n            context.strokeStyle = 'white';\n            context.stroke();\n        });\n}\n\nexport function calculatePosition (radian, options)\n{\n    return {\n        x: options.posXFn(radian) * options.radius + options.centerX,\n        y: options.posYFn(radian) * options.radius + options.centerY\n    }\n}\n\nexport function calculateCPPosition (radian, time, options)\n{\n    return {\n        x: options.controlPointXFn(radian, time) * \n        options.radius * \n        (options.contractionFunc(radian, time) * options.contractionSize) + \n        options.centerX,\n\n        y: options.controlPointYFn(radian, time) *\n        options.radius * \n        (options.contractionFunc(radian, time) * options.contractionSize) + \n        options.centerY\n    }\n}\n\nexport function rotationStepFor (numVertices)\n{\n    return (Math.PI * 2) / (numVertices * 2);\n}\n\nexport function makeBezierVertex (index, radian, time, options)\n{\n    const xPosition = calculatePosition(radian + rotationStepFor(options.numVertices), options).x;\n    const yPosition = calculatePosition(radian + rotationStepFor(options.numVertices), options).y;\n    const cpXPosition = calculateCPPosition(radian, time, options).x;\n    const cpYPosition = calculateCPPosition(radian, time, options).y;\n    const cpNextXPosition = calculateCPPosition(radian, time + 0.1, options).x;\n    const cpNextYPosition = calculateCPPosition(radian, time + 0.1, options).y;\n\n    return {\n        index: index,\n        x_pos: xPosition,\n        y_pos: yPosition,\n        radian: radian,\n\n        cp0x_orig: cpXPosition,\n        cp0y_orig: cpYPosition,\n        cp0x: cpXPosition,\n        cp0y: cpYPosition,\n        cp0x_next: cpNextXPosition,\n        cp0y_next: cpNextYPosition,\n\n        cp1x_orig: cpXPosition,\n        cp1y_orig: cpYPosition,\n        cp1x: cpXPosition,\n        cp1y: cpYPosition,\n        cp1x_next: cpNextXPosition,\n        cp1y_next: cpNextYPosition\n    }\n}\n\nexport function makeFirstVertex (time, options)\n{\n    return makeBezierVertex(0, -rotationStepFor(options.numVertices), time, options);\n}\n\nexport function updateBezierVertexControlPoints (vertex, time, options)\n{\n    const cpNextXPosition = calculateCPPosition(vertex.radian, time, options).x;\n    const cpNextYPosition = calculateCPPosition(vertex.radian, time, options).y;\n\n    vertex.cp0x_orig = vertex.cp0x_next;\n    vertex.cp0y_orig = vertex.cp0y_next;\n\n    vertex.cp0x = vertex.cp0x_next;\n    vertex.cp0y = vertex.cp0y_next;\n\n    vertex.cp0x_next = cpNextXPosition;\n    vertex.cp0y_next = cpNextYPosition;\n\n    vertex.cp1x_orig = vertex.cp1x_next;\n    vertex.cp1y_orig = vertex.cp1y_next;\n\n    vertex.cp1x = vertex.cp1x_next;\n    vertex.cp1y = vertex.cp1y_next;\n\n    vertex.cp1x_next = cpNextXPosition;\n    vertex.cp1y_next = cpNextYPosition;\n\n    return vertex;\n}\n\nexport function tweenControlPoints (vertex, options)\n{\n    return gsap.fromTo(\n        vertex,\n        {\n\n            cp0x: vertex.cp0x_orig,\n            cp0y: vertex.cp0y_orig,\n            cp1x: vertex.cp1x_orig,\n            cp1y: vertex.cp1y_orig,\n\n          },\n          {\n\n            cp0x: vertex.cp0x_next,\n            cp0y: vertex.cp0y_next,\n            cp1x: vertex.cp1x_next,\n            cp1y: vertex.cp1y_next,\n            duration: options.tweenDuration,\n            ease: options.tweenType\n\n          }\n    );\n}\n\nexport function makeVertices (time, options)\n{\n    const result = Array(options.numVertices);\n    const step = rotationStepFor(options.numVertices);\n    \n    result[0] = makeFirstVertex(time, options);\n    \n    for (let index = 1; index <= options.numVertices; index++)\n    {\n        const radian = step + (step * 2 * (index - 1));\n\n        result[index] = makeBezierVertex(index, radian, time, options);\n        \n        result[index].cp_tween = tweenControlPoints(result[index], options);\n        result[index].cp_tween.pause();\n    }\n\n    return result;\n\n}\n\nexport function refreshVertices (vertices, time, options, optionsCache)\n{\n    if (diverges(options, optionsCache))\n    {\n        console.log(\"Vertices or radius changed\");\n\n        vertices = makeVertices(time, options);\n\n        cacheOptions(options);\n    }\n\n    vertices.forEach((vertex, index) => \n        {\n            if (index == 0) return;\n\n            updateBezierVertexControlPoints(vertex, time, options);\n            \n            vertex.cp_tween = tweenControlPoints(vertex, options);\n            vertex.cp_tween.pause();\n        });\n\n    return vertices;\n}\n\nexport function refresh (vertices, time, options, optionsCache)\n{\n    const internalTimer = (time % options.cycleSpeed) / (options.cycleSpeed - 1);\n\n    if (internalTimer == 0 || diverges(options, optionsCache))\n    {\n        options.beforeCycle();\n        vertices = refreshVertices(vertices, time, options, optionsCache);\n    }\n\n    vertices.forEach((vertex, index) => \n        {\n            if (index == 0) return; \n            vertex.cp_tween.progress(internalTimer);\n        });\n\n    return vertices;\n}\n","import options from './options.js';\n\nclass Controls {\n\n    constructor (controlIDs = []) {\n\n        this.controls = {};\n\n        if (controlIDs.length > 0) {\n            this.controls = controlIDs.reduce(\n            (acc, id) => { \n                acc[id] = makeController(id); return acc; \n            }, {});\n        }\n\n        return this.controls;\n    }\n}\n\nfunction makeController (id) \n{\n    const element = document.getElementById(id);\n\n    // set as object so we can redefine in future\n    const controller = {\n        element,\n        value: element.value,\n        // register the callback\n        set callback (fn) { \n            if (element.type == \"range\") element.oninput = fn;\n            if (element.type == \"submit\") element.addEventListener('click', fn);\n        }\n    }\n\n    return controller;\n}\n\nconst controls = new Controls(['contractionSlider', 'radiusSlider', 'verticesSlider', 'tracesSlider', 'speedSlider', 'pauseButton']);\n\ncontrols.contractionSlider.callback = (e) => options.contractionSize = e.target.value;\noptions.contractionSize = controls.contractionSlider.value;\n\ncontrols.radiusSlider.callback = (e) => options.radius = e.target.value;\noptions.radius = controls.radiusSlider.value;\n\ncontrols.verticesSlider.callback = (e) => options.numVertices = e.target.value;\noptions.numVertices = controls.verticesSlider.value;\n\ncontrols.tracesSlider.callback = (e) => options.traceAmt = e.target.value;\noptions.traceAmt = controls.tracesSlider.value;\n\ncontrols.speedSlider.callback = (e) => options.cycleSpeed = e.target.value;\noptions.cycleSpeed = controls.speedSlider.value;\n\nexport default controls;\n","import { draw, makeVertices, refresh } from './logic.js';\nimport options from './options.js';\nimport { cache } from './options.js';\nimport controls from './controls.js';\n\ncontrols.pauseButton.callback = () => \n{\n    options.paused = !options.paused;\n    if (options.paused) {\n        controls.pauseButton.element.innerHTML = \"Play\";\n    } else {\n        controls.pauseButton.element.innerHTML = \"Pause\";\n        start(stateCache.vertices, stateCache.time, ctxt, options, cache);\n    }\n}\n\nconst canvas = document.getElementById('canvas');\nconst ctxt = canvas.getContext('2d');\nctxt.imageSmoothingQuality = \"high\";\nconst time = 0; // Initial time, state is maintained recursively.\n\nconst vertices = makeVertices(time, options);\nconst stateCache = { // Store vertex position here on pause.\n    vertices,\n    time\n}\n\noptions.beforeCycle = () => drawBackground(ctxt, options);\n\nstart(vertices, time, ctxt, options, cache);\n\nfunction start (vertices, time, ctxt, options, cache)\n{\n    ctxt.translate(0.5, 0.5);\n    drawBackground(ctxt, options);\n    loop(vertices, time, ctxt, options, cache);\n}\n\nfunction drawBackground (ctxt, options, transparent = false)\n{\n    const color = options.bgColor;\n    ctxt.fillStyle = transparent ? \n        `rgb(${color}, ${color}, ${color}, ${options.traceAmt})` :\n        `rgb(${color}, ${color}, ${color})`;\n    ctxt.fillRect(0, 0, 400, 400);\n}\n\nfunction loop (vertices, time, ctxt, options, cache)\n{\n    drawBackground(ctxt, options, true);\n\n    vertices = refresh(vertices, time, options, cache);\n\n    draw(vertices, ctxt);\n\n    if (!options.paused) {\n        next(() => loop(vertices, time + 1, ctxt, options, cache))\n    } else {\n        stateCache.vertices = vertices;\n        stateCache.time = time + 1;\n    }\n}\n\nfunction next (fn)\n{\n    window.requestAnimationFrame(fn);\n}\n\n"]}